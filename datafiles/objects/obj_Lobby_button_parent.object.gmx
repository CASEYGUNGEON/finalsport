<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_TextFitBox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init text
MyText=" ";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init server number
MyServerNumber=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init Lobby type
if instance_number(obj_lan_lobby)
{
    LanLobby=true;
}
else
{
    LanLobby=false; // false is online lobby
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Join
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start
if MyServerNumber&gt;-1
{
    if LanLobby
    {
        with obj_lan_lobby
        {
            var ConnectToServerNumber=other.MyServerNumber;
            var l = htme_getLANServers();
            if (ds_exists(l,ds_type_list)) 
            {
                if (ds_list_size(l)&gt;ConnectToServerNumber) 
                {
                    var entry = l[| ConnectToServerNumber];
                    var ip = entry[? "ip"];
                    var port = entry[? "port"];
                    var game = entry[? "data1"];
                    var the_server_port = entry[? "data4"]; // Port
                    scr_steam_on_LoadSteamIDFromLobby(entry[? "data7"]);
                    global.ConnectToServerPort=real(the_server_port);
                    if (game != self.game) 
                    {
                       //Not compatible game, exit
                       show_debug_message("Game server or version is incompatible!");
                       exit;
                    }
                    if (htme_clientStart(ip, port)) 
                    {
                        //Wait for connection success!
                        room_goto(htme_rom_connecting); 
                    } else {
                        show_debug_message("Could not start client! Check your network configuration!");
                    }
                } 
                else 
                {
                  //Do nothing - There is no server on this slot
                }
            } 
            else 
            {
              //Do nothing - There is no server on this slot
            }
        }
    }
    else
    {
        with obj_online_lobby
        {
            var ConnectToServerNumber=other.MyServerNumber;
            var l = global.udphp_downloadlist;
            if (ds_exists(l,ds_type_list)) 
            {
                if (ds_list_size(l)&gt;ConnectToServerNumber) 
                {
                    var entry = l[| ConnectToServerNumber];
                    var ip = entry[? "ip"];
                    var game = entry[? "data1"];
                    var the_server_port = entry[? "data4"]; // Port
                    scr_steam_on_LoadSteamIDFromLobby(entry[? "data7"]);
                    global.ConnectToServerPort=real(the_server_port);                    
                    if (game != self.game) 
                    {
                       //Not compatible game, exit
                       show_debug_message("Game server or version is incompatible!");
                       exit;
                    }
                    else {
                        if (script_execute(asset_get_index("htme_clientStart"),ip, 0)) 
                        {
                            //Wait for connection success!
                            room_goto(htme_rom_connecting);
                        } else {
                            show_debug_message("Could not start client! Check your network configuration!");
                        }
                    }
                } 
                else 
                {
                  //Do nothing - There is no server on this slot
                }
            } 
            else 
            {
              //Do nothing - There is no server on this slot
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw text
Text_Font=font0;
Text_Color=c_ltgray;
Text_To_Draw=MyText;
Text_Auto_Wrap=false;
Text_Max_Scale=-1; // Will try to hold this scale on the text (-1 to fit in box)
Text_halign=fa_center; // fa_left fa_center fa_right
Text_valign=fa_middle; // fa_top fa_middle fa_bottom
Text_allow_different_xyscale=false; // fill whole area with text

//draw_self();

// Run
scr_Text_Fit_Box_Common();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
