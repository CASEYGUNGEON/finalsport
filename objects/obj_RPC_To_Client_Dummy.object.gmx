<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_RPC_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
send_message=true;
self.rpc_id=" ";
room_=room;

// Client object
client_object=obj_client_handler;

// Your data
TestData="Hello Server";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Send to player and receive
if send_message
{
    self.rpc_id = htme_hash();

    // Save room
    rpc_room=room;
    // Start timeout (The message may be gone on server)
    rpc_timeout=30;    
    // Script to run
    rpc_script_to_run=scr_RPC_dummy;
        
    htmerpc_send(self.rpc_id,rpc_script_to_run,client_object.htme_mp_player,TestData);

    send_message=false;
    
    // Check if not will return a value
    if htmerpc_Send_Return_Value(script_get_name(rpc_script_to_run))=false instance_destroy();     
}
else
{
    var returnedValue = ds_map_find_value(obj_htme_rpc.returnedValues,self.rpc_id);
    
    // Timeout
    rpc_timeout-=delta_time*0.000001;
    if rpc_timeout&lt;0 
    {
        returnedValue="-=WRONG_RPC_ROOM=-"; 
        show_debug_message("RPC TIMED OUT!");
    }    
    
    //ds_map_find_value returns undefined if the key was not found -&gt; if the returnedValue has not been recieved
    //Please make sure the function actually returns something and returns something other than undefined, otherwise this code will never run.
    if (!is_undefined(returnedValue)) 
    {
        // Check if we are in wrong room when we received this return message
        if htmerpc_Allow_Run_Script_Current_Room(script_get_name(rpc_script_to_run),rpc_room)=false
        {
            returnedValue="-=WRONG_RPC_ROOM=-";
            show_debug_message("Rejected a RPC from server because we have moved since.");
        }
        // Check if wrong room error message
        var AllowRun=true;
        if is_string(returnedValue)
        {
            if returnedValue="-=WRONG_RPC_ROOM=-" AllowRun=false;
        }
        if AllowRun
        {
            //show_message(returnedValue);
        }
        
        //After that make sure to delete the key if you don't need it anymore
        ds_map_delete(obj_htme_rpc.returnedValues,self.rpc_id);
        
        instance_destroy();
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
