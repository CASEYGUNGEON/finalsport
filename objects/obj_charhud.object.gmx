<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_charhud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
gameEnding = 0;
meter = 0;

if(!global.hudcreated) {
    global.hudcreated = 1;
    
    htme_globalSet("hostLives",3,buffer_u8);
    htme_globalSet("clientLives",3,buffer_u8);
    htme_globalSet("hostmeter",0,buffer_u8);
    htme_globalSet("clientmeter",0,buffer_u8);
    
    player = 0;
    image_index = 0;
    color = c_blue;
    image_index = scr_char_number(global.playerChar);
    charhud2 = instance_create(x,y,obj_charhud);
    charhud2.player = 1;
    charhud2.color = c_red;

    if(!global.networkJoin) {
        image_index = scr_char_number(global.playerChar);
        charhud2.image_index = scr_char_number(global.player2Char);
    } else {
        image_index = scr_char_number(global.player2Char);
        charhud2.image_index = scr_char_number(global.playerChar);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hudcreated = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gui_x = 300+(player*400);
gui_y = 690;

draw_sprite_ext(sprite_index,image_index,gui_x,gui_y,1,1,0,color,.75);

if(!player) { //if left HUD element
    self.lifecount = htme_globalGet("hostLives");
    if(!global.networkJoin) { //if host
        self.playerName = global.playerName;
        meter = htme_globalGet("hostmeter");
    } else {
        self.playerName = global.player2Name;
        meter = htme_globalGet("hostmeter");
    }
} else { //if right element
    self.lifecount = htme_globalGet("clientLives");
    if(global.networkJoin) { //if not host
        self.playerName = global.playerName;
        meter = htme_globalGet("clientmeter");
    } else {
        self.playerName = global.player2Name;
        meter = htme_globalGet("clientmeter");
    }
}

if(!self.lifecount &amp;&amp; !gameEnding) {
    obj_ender.alarm[0] = 1;
    gameEnding = 1;
}

lifex = 0;
var i;
for(i=0;i&lt;self.lifecount;i++) {
    draw_sprite(spr_lives,0,gui_x+lifex,gui_y);
    lifex += 18;
}

draw_text(gui_x,gui_y,self.playerName);

draw_healthbar(gui_x-50,gui_y+30,gui_x+50,gui_y+50,meter,c_black,c_red,c_green,0,true,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
