<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>rail_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CUSTOMIZABLE VARIABLES

global.playerChar = "rail";

disjoint = 0;
attackStartup = 15;
attackDuration = 29;
attackCooldown = 90;
animationSpeed = 1;
moveSpeed = 4;
scale = .75;

//NON-CUSTOMIZABLE VARIABLES

image_speed = 0
ammo = 100;
lenx = 20;
leny = 1;
shot_delay = 8;
vari = 1;
alarm[0] = 0
hitbox = 0;
onCooldown = 0;
attack = 0;
dir = 0;
facing = "up";
image_xscale = scale;
image_yscale = scale;
current = 0;
moveDirLast = 0;
startupCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>onCooldown</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//point towards cursor

dir = point_direction(x,y,mouse_x,mouse_y);

if(attack == 0) {
    if(dir &gt; 68 &amp;&amp; dir &lt;= 112){
        facing = "up";
    }else if(dir &gt; 113 &amp;&amp; dir &lt;= 157){
        facing = "upleft";
    }else if(dir &gt; 158 &amp;&amp; dir &lt;= 202){
        facing = "left";
    }else if(dir &gt; 203 &amp;&amp; dir &lt;= 247){
        facing = "downleft";
    }else if(dir &gt; 248 &amp;&amp; dir &lt;= 292){
        facing = "down";
    }else if(dir &gt; 293 &amp;&amp; dir &lt;= 337){
        facing = "downright";
    }else if(dir &gt; 338 || dir &lt;= 21){
        facing = "right";
    }else if(dir &gt; 22 &amp;&amp; dir &lt;= 67){
        facing = "upright";
    }
}

//movement

moveup = keyboard_check(ord('W'))
movedown = keyboard_check(ord('S'))
moveleft = keyboard_check(ord('A'))
moveright = keyboard_check(ord('D'))
horzmove = 0;
vertmove = 0;
colliding = 0;
mask_index = rail_down;


if(moveup &amp;&amp; movedown) {
    moveup = 0;
    movedown = 0;
}                           //if opposite directions are pressed, do neither

if(moveleft &amp;&amp; moveright) {
    moveleft = 0;
    moveright = 0;
}


if(moveup) {
    if(!place_meeting(x,y-4,obj_GenEnviroHitbox)) {
        y -= moveSpeed
        vertmove = 90;
    } else {            //move, unless there's a wall
        colliding = 1;
    }
}

if(movedown) {
    if(!place_meeting(x,y+4,obj_GenEnviroHitbox)) {
        y += moveSpeed
        vertmove = 270;
    } else {
        colliding = 1;
    }
}

if(moveleft) {
    if(!place_meeting(x-4,y,obj_GenEnviroHitbox)) {
        x -= moveSpeed
        horzmove = 180;
    } else {
        colliding = 1;
    }
}

if(moveright) {
    if(!place_meeting(x+4,y,obj_GenEnviroHitbox)) {
        x += moveSpeed
        horzmove = 360;
    } else {
        colliding = 1;
    }
}

moveDir = (vertmove + horzmove);

if(vertmove &amp;&amp; horzmove){
    moveDir /=2;
}
if(moveup &amp;&amp; moveright) {
    moveDir-=180;           //math to find angle that obj is moving at
}


if(colliding) {
    scr_avoid(moveDirLast,obj_GenEnviroHitbox);
}           //if there's a wall, move along it instead of through it

if(moveDir) {
    moveDirLast = moveDir;
}       //this is just so the scr_avoid() script works

with obj_GenEnviroHitbox {
    if (place_meeting(x,y,obj_player)) {
        obj_player.collisionDir = point_direction(x,y,obj_player.x,obj_player.y);
        with other {
            motion_set(collisionDir,obj_player.moveSpeed);
        }
    } else {
        obj_player.speed = 0;
    }       //prevents from getting stuck inside environment
}

//visual

depth = -y;


moveVsMouse = 180 - abs(abs(moveDir - dir) - 180);


image_speed = animationSpeed;


if(moveup + movedown + moveleft + moveright != 0) {     //change to movement sprites if moving
    if(!attack) {
        if(sprite_index = scr_getSprite(global.playerChar,facing)) {
            image_index = 0;
        }
        sprite_index = scr_getSprite(global.playerChar,facing,"move")
    }
    if(moveVsMouse &gt; 90) {
        image_speed = -animationSpeed;
    }
} else {
    if(!attack) {          //change to idle sprites if not moving
        sprite_index = scr_getSprite(global.playerChar,facing);
        if(sprite_index = scr_getSprite(global.playerChar,facing,"attack")) {
            image_index = 0;
        }
    }
}


//attacking

if(!onCooldown) {

    switch (mouse_button) {
        case mb_left: {     //punch
            attack = 1;
            sprite_index = scr_getSprite(global.playerChar,facing,"att");
            disjointx = lengthdir_x(disjoint,dir);
            disjointy = lengthdir_y(disjoint,dir);
            hurtbox = scr_attack(global.playerChar);
            break;
        }
        case mb_right: {    //grab
        
        break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
